# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: |
        go install src.techknowlogick.com/xgo@latest
        xgo --targets=linux/arm64 -out build/gundam-displays github.com/ElijahB09/Gundam-Displays
        mkdir -p ${{ github.workspace }}/build-artifacts
        cp -r ./build/* ${{ github.workspace }}/build-artifacts/

      env:
        ARTIFACTS_DIR: ${{ github.workspace }}/build-artifacts

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install SSH client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Set up SSH key and start agent
      run: |
        echo "$SSH_PRIVATE_KEY" > $GITHUB_WORKSPACE/id_rsa
        chmod 600 $GITHUB_WORKSPACE/id_rsa
        eval "$(ssh-agent -s)"
        ssh-add - <<< "$SSH_KEY_PASSPHRASE"
        ssh-keyscan -H ${{ secrets.RPI_HOSTNAME }} >> $GITHUB_WORKSPACE/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_KEY_PASSPHRASE: ${{ secrets.SSH_KEY_PASSPHRASE }}

    - name: Deploy code to Raspberry Pi
      run: |
        scp -i $GITHUB_WORKSPACE/id_rsa -r $GITHUB_WORKSPACE/build-artifacts/ ${{ secrets.RPI_USERNAME }}@${{ secrets.RPI_HOSTNAME }}:/home/${{ secrets.RPI_USERNAME }}/Gundam-Display/
      env:
        RPI_USERNAME: ${{ secrets.RPI_USERNAME }}
        RPI_HOSTNAME: ${{ secrets.RPI_HOSTNAME }}

    - name: Clean up SSH key
      run: |
        rm -f $GITHUB_WORKSPACE/id_rsa
        ssh-keygen -R ${{ secrets.RPI_HOSTNAME }}
      env:
        RPI_HOSTNAME: ${{ secrets.RPI_HOSTNAME }}

